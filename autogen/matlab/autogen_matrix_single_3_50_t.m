%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% TITLE:   autogen/matlab/autogen_matrix_single_3_50_t.m                  %
% AUTHOR:  Miki Szmuk                                                     %
% LAB:     Autonomous Controls Lab (ACL)                                  %
% LICENSE: Copyright 2016, 2017, All Rights Reserved                      %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

classdef autogen_matrix_single_3_50_t < handle
  properties (Access = public)
    mat(3,50) single;
  end
  methods (Sealed = true)
    function [buffer,i2] = serialize_content(obj,buffer,i1)
      mustBeInteger(i1)
      mustBePositive(i1)
      if (all(isa(buffer,'uint8')))&&(isvector(buffer))
        buffer(i1+0+(0:3)) = typecast(obj.mat(1,1),'uint8');
        buffer(i1+4+(0:3)) = typecast(obj.mat(1,2),'uint8');
        buffer(i1+8+(0:3)) = typecast(obj.mat(1,3),'uint8');
        buffer(i1+12+(0:3)) = typecast(obj.mat(1,4),'uint8');
        buffer(i1+16+(0:3)) = typecast(obj.mat(1,5),'uint8');
        buffer(i1+20+(0:3)) = typecast(obj.mat(1,6),'uint8');
        buffer(i1+24+(0:3)) = typecast(obj.mat(1,7),'uint8');
        buffer(i1+28+(0:3)) = typecast(obj.mat(1,8),'uint8');
        buffer(i1+32+(0:3)) = typecast(obj.mat(1,9),'uint8');
        buffer(i1+36+(0:3)) = typecast(obj.mat(1,10),'uint8');
        buffer(i1+40+(0:3)) = typecast(obj.mat(1,11),'uint8');
        buffer(i1+44+(0:3)) = typecast(obj.mat(1,12),'uint8');
        buffer(i1+48+(0:3)) = typecast(obj.mat(1,13),'uint8');
        buffer(i1+52+(0:3)) = typecast(obj.mat(1,14),'uint8');
        buffer(i1+56+(0:3)) = typecast(obj.mat(1,15),'uint8');
        buffer(i1+60+(0:3)) = typecast(obj.mat(1,16),'uint8');
        buffer(i1+64+(0:3)) = typecast(obj.mat(1,17),'uint8');
        buffer(i1+68+(0:3)) = typecast(obj.mat(1,18),'uint8');
        buffer(i1+72+(0:3)) = typecast(obj.mat(1,19),'uint8');
        buffer(i1+76+(0:3)) = typecast(obj.mat(1,20),'uint8');
        buffer(i1+80+(0:3)) = typecast(obj.mat(1,21),'uint8');
        buffer(i1+84+(0:3)) = typecast(obj.mat(1,22),'uint8');
        buffer(i1+88+(0:3)) = typecast(obj.mat(1,23),'uint8');
        buffer(i1+92+(0:3)) = typecast(obj.mat(1,24),'uint8');
        buffer(i1+96+(0:3)) = typecast(obj.mat(1,25),'uint8');
        buffer(i1+100+(0:3)) = typecast(obj.mat(1,26),'uint8');
        buffer(i1+104+(0:3)) = typecast(obj.mat(1,27),'uint8');
        buffer(i1+108+(0:3)) = typecast(obj.mat(1,28),'uint8');
        buffer(i1+112+(0:3)) = typecast(obj.mat(1,29),'uint8');
        buffer(i1+116+(0:3)) = typecast(obj.mat(1,30),'uint8');
        buffer(i1+120+(0:3)) = typecast(obj.mat(1,31),'uint8');
        buffer(i1+124+(0:3)) = typecast(obj.mat(1,32),'uint8');
        buffer(i1+128+(0:3)) = typecast(obj.mat(1,33),'uint8');
        buffer(i1+132+(0:3)) = typecast(obj.mat(1,34),'uint8');
        buffer(i1+136+(0:3)) = typecast(obj.mat(1,35),'uint8');
        buffer(i1+140+(0:3)) = typecast(obj.mat(1,36),'uint8');
        buffer(i1+144+(0:3)) = typecast(obj.mat(1,37),'uint8');
        buffer(i1+148+(0:3)) = typecast(obj.mat(1,38),'uint8');
        buffer(i1+152+(0:3)) = typecast(obj.mat(1,39),'uint8');
        buffer(i1+156+(0:3)) = typecast(obj.mat(1,40),'uint8');
        buffer(i1+160+(0:3)) = typecast(obj.mat(1,41),'uint8');
        buffer(i1+164+(0:3)) = typecast(obj.mat(1,42),'uint8');
        buffer(i1+168+(0:3)) = typecast(obj.mat(1,43),'uint8');
        buffer(i1+172+(0:3)) = typecast(obj.mat(1,44),'uint8');
        buffer(i1+176+(0:3)) = typecast(obj.mat(1,45),'uint8');
        buffer(i1+180+(0:3)) = typecast(obj.mat(1,46),'uint8');
        buffer(i1+184+(0:3)) = typecast(obj.mat(1,47),'uint8');
        buffer(i1+188+(0:3)) = typecast(obj.mat(1,48),'uint8');
        buffer(i1+192+(0:3)) = typecast(obj.mat(1,49),'uint8');
        buffer(i1+196+(0:3)) = typecast(obj.mat(1,50),'uint8');
        buffer(i1+200+(0:3)) = typecast(obj.mat(2,1),'uint8');
        buffer(i1+204+(0:3)) = typecast(obj.mat(2,2),'uint8');
        buffer(i1+208+(0:3)) = typecast(obj.mat(2,3),'uint8');
        buffer(i1+212+(0:3)) = typecast(obj.mat(2,4),'uint8');
        buffer(i1+216+(0:3)) = typecast(obj.mat(2,5),'uint8');
        buffer(i1+220+(0:3)) = typecast(obj.mat(2,6),'uint8');
        buffer(i1+224+(0:3)) = typecast(obj.mat(2,7),'uint8');
        buffer(i1+228+(0:3)) = typecast(obj.mat(2,8),'uint8');
        buffer(i1+232+(0:3)) = typecast(obj.mat(2,9),'uint8');
        buffer(i1+236+(0:3)) = typecast(obj.mat(2,10),'uint8');
        buffer(i1+240+(0:3)) = typecast(obj.mat(2,11),'uint8');
        buffer(i1+244+(0:3)) = typecast(obj.mat(2,12),'uint8');
        buffer(i1+248+(0:3)) = typecast(obj.mat(2,13),'uint8');
        buffer(i1+252+(0:3)) = typecast(obj.mat(2,14),'uint8');
        buffer(i1+256+(0:3)) = typecast(obj.mat(2,15),'uint8');
        buffer(i1+260+(0:3)) = typecast(obj.mat(2,16),'uint8');
        buffer(i1+264+(0:3)) = typecast(obj.mat(2,17),'uint8');
        buffer(i1+268+(0:3)) = typecast(obj.mat(2,18),'uint8');
        buffer(i1+272+(0:3)) = typecast(obj.mat(2,19),'uint8');
        buffer(i1+276+(0:3)) = typecast(obj.mat(2,20),'uint8');
        buffer(i1+280+(0:3)) = typecast(obj.mat(2,21),'uint8');
        buffer(i1+284+(0:3)) = typecast(obj.mat(2,22),'uint8');
        buffer(i1+288+(0:3)) = typecast(obj.mat(2,23),'uint8');
        buffer(i1+292+(0:3)) = typecast(obj.mat(2,24),'uint8');
        buffer(i1+296+(0:3)) = typecast(obj.mat(2,25),'uint8');
        buffer(i1+300+(0:3)) = typecast(obj.mat(2,26),'uint8');
        buffer(i1+304+(0:3)) = typecast(obj.mat(2,27),'uint8');
        buffer(i1+308+(0:3)) = typecast(obj.mat(2,28),'uint8');
        buffer(i1+312+(0:3)) = typecast(obj.mat(2,29),'uint8');
        buffer(i1+316+(0:3)) = typecast(obj.mat(2,30),'uint8');
        buffer(i1+320+(0:3)) = typecast(obj.mat(2,31),'uint8');
        buffer(i1+324+(0:3)) = typecast(obj.mat(2,32),'uint8');
        buffer(i1+328+(0:3)) = typecast(obj.mat(2,33),'uint8');
        buffer(i1+332+(0:3)) = typecast(obj.mat(2,34),'uint8');
        buffer(i1+336+(0:3)) = typecast(obj.mat(2,35),'uint8');
        buffer(i1+340+(0:3)) = typecast(obj.mat(2,36),'uint8');
        buffer(i1+344+(0:3)) = typecast(obj.mat(2,37),'uint8');
        buffer(i1+348+(0:3)) = typecast(obj.mat(2,38),'uint8');
        buffer(i1+352+(0:3)) = typecast(obj.mat(2,39),'uint8');
        buffer(i1+356+(0:3)) = typecast(obj.mat(2,40),'uint8');
        buffer(i1+360+(0:3)) = typecast(obj.mat(2,41),'uint8');
        buffer(i1+364+(0:3)) = typecast(obj.mat(2,42),'uint8');
        buffer(i1+368+(0:3)) = typecast(obj.mat(2,43),'uint8');
        buffer(i1+372+(0:3)) = typecast(obj.mat(2,44),'uint8');
        buffer(i1+376+(0:3)) = typecast(obj.mat(2,45),'uint8');
        buffer(i1+380+(0:3)) = typecast(obj.mat(2,46),'uint8');
        buffer(i1+384+(0:3)) = typecast(obj.mat(2,47),'uint8');
        buffer(i1+388+(0:3)) = typecast(obj.mat(2,48),'uint8');
        buffer(i1+392+(0:3)) = typecast(obj.mat(2,49),'uint8');
        buffer(i1+396+(0:3)) = typecast(obj.mat(2,50),'uint8');
        buffer(i1+400+(0:3)) = typecast(obj.mat(3,1),'uint8');
        buffer(i1+404+(0:3)) = typecast(obj.mat(3,2),'uint8');
        buffer(i1+408+(0:3)) = typecast(obj.mat(3,3),'uint8');
        buffer(i1+412+(0:3)) = typecast(obj.mat(3,4),'uint8');
        buffer(i1+416+(0:3)) = typecast(obj.mat(3,5),'uint8');
        buffer(i1+420+(0:3)) = typecast(obj.mat(3,6),'uint8');
        buffer(i1+424+(0:3)) = typecast(obj.mat(3,7),'uint8');
        buffer(i1+428+(0:3)) = typecast(obj.mat(3,8),'uint8');
        buffer(i1+432+(0:3)) = typecast(obj.mat(3,9),'uint8');
        buffer(i1+436+(0:3)) = typecast(obj.mat(3,10),'uint8');
        buffer(i1+440+(0:3)) = typecast(obj.mat(3,11),'uint8');
        buffer(i1+444+(0:3)) = typecast(obj.mat(3,12),'uint8');
        buffer(i1+448+(0:3)) = typecast(obj.mat(3,13),'uint8');
        buffer(i1+452+(0:3)) = typecast(obj.mat(3,14),'uint8');
        buffer(i1+456+(0:3)) = typecast(obj.mat(3,15),'uint8');
        buffer(i1+460+(0:3)) = typecast(obj.mat(3,16),'uint8');
        buffer(i1+464+(0:3)) = typecast(obj.mat(3,17),'uint8');
        buffer(i1+468+(0:3)) = typecast(obj.mat(3,18),'uint8');
        buffer(i1+472+(0:3)) = typecast(obj.mat(3,19),'uint8');
        buffer(i1+476+(0:3)) = typecast(obj.mat(3,20),'uint8');
        buffer(i1+480+(0:3)) = typecast(obj.mat(3,21),'uint8');
        buffer(i1+484+(0:3)) = typecast(obj.mat(3,22),'uint8');
        buffer(i1+488+(0:3)) = typecast(obj.mat(3,23),'uint8');
        buffer(i1+492+(0:3)) = typecast(obj.mat(3,24),'uint8');
        buffer(i1+496+(0:3)) = typecast(obj.mat(3,25),'uint8');
        buffer(i1+500+(0:3)) = typecast(obj.mat(3,26),'uint8');
        buffer(i1+504+(0:3)) = typecast(obj.mat(3,27),'uint8');
        buffer(i1+508+(0:3)) = typecast(obj.mat(3,28),'uint8');
        buffer(i1+512+(0:3)) = typecast(obj.mat(3,29),'uint8');
        buffer(i1+516+(0:3)) = typecast(obj.mat(3,30),'uint8');
        buffer(i1+520+(0:3)) = typecast(obj.mat(3,31),'uint8');
        buffer(i1+524+(0:3)) = typecast(obj.mat(3,32),'uint8');
        buffer(i1+528+(0:3)) = typecast(obj.mat(3,33),'uint8');
        buffer(i1+532+(0:3)) = typecast(obj.mat(3,34),'uint8');
        buffer(i1+536+(0:3)) = typecast(obj.mat(3,35),'uint8');
        buffer(i1+540+(0:3)) = typecast(obj.mat(3,36),'uint8');
        buffer(i1+544+(0:3)) = typecast(obj.mat(3,37),'uint8');
        buffer(i1+548+(0:3)) = typecast(obj.mat(3,38),'uint8');
        buffer(i1+552+(0:3)) = typecast(obj.mat(3,39),'uint8');
        buffer(i1+556+(0:3)) = typecast(obj.mat(3,40),'uint8');
        buffer(i1+560+(0:3)) = typecast(obj.mat(3,41),'uint8');
        buffer(i1+564+(0:3)) = typecast(obj.mat(3,42),'uint8');
        buffer(i1+568+(0:3)) = typecast(obj.mat(3,43),'uint8');
        buffer(i1+572+(0:3)) = typecast(obj.mat(3,44),'uint8');
        buffer(i1+576+(0:3)) = typecast(obj.mat(3,45),'uint8');
        buffer(i1+580+(0:3)) = typecast(obj.mat(3,46),'uint8');
        buffer(i1+584+(0:3)) = typecast(obj.mat(3,47),'uint8');
        buffer(i1+588+(0:3)) = typecast(obj.mat(3,48),'uint8');
        buffer(i1+592+(0:3)) = typecast(obj.mat(3,49),'uint8');
        buffer(i1+596+(0:3)) = typecast(obj.mat(3,50),'uint8');
        i2 = i1+600;
      else
        error('Buffer must be a uint8 array.')
      end
    end
    function [i2] = deserialize_content(obj,buffer,i1)
      mustBeInteger(i1)
      mustBePositive(i1)
      if (all(isa(buffer,'uint8')))&&(isvector(buffer))
        obj.mat(1,1) = typecast(buffer(i1+0+(0:3)),'single');
        obj.mat(1,2) = typecast(buffer(i1+4+(0:3)),'single');
        obj.mat(1,3) = typecast(buffer(i1+8+(0:3)),'single');
        obj.mat(1,4) = typecast(buffer(i1+12+(0:3)),'single');
        obj.mat(1,5) = typecast(buffer(i1+16+(0:3)),'single');
        obj.mat(1,6) = typecast(buffer(i1+20+(0:3)),'single');
        obj.mat(1,7) = typecast(buffer(i1+24+(0:3)),'single');
        obj.mat(1,8) = typecast(buffer(i1+28+(0:3)),'single');
        obj.mat(1,9) = typecast(buffer(i1+32+(0:3)),'single');
        obj.mat(1,10) = typecast(buffer(i1+36+(0:3)),'single');
        obj.mat(1,11) = typecast(buffer(i1+40+(0:3)),'single');
        obj.mat(1,12) = typecast(buffer(i1+44+(0:3)),'single');
        obj.mat(1,13) = typecast(buffer(i1+48+(0:3)),'single');
        obj.mat(1,14) = typecast(buffer(i1+52+(0:3)),'single');
        obj.mat(1,15) = typecast(buffer(i1+56+(0:3)),'single');
        obj.mat(1,16) = typecast(buffer(i1+60+(0:3)),'single');
        obj.mat(1,17) = typecast(buffer(i1+64+(0:3)),'single');
        obj.mat(1,18) = typecast(buffer(i1+68+(0:3)),'single');
        obj.mat(1,19) = typecast(buffer(i1+72+(0:3)),'single');
        obj.mat(1,20) = typecast(buffer(i1+76+(0:3)),'single');
        obj.mat(1,21) = typecast(buffer(i1+80+(0:3)),'single');
        obj.mat(1,22) = typecast(buffer(i1+84+(0:3)),'single');
        obj.mat(1,23) = typecast(buffer(i1+88+(0:3)),'single');
        obj.mat(1,24) = typecast(buffer(i1+92+(0:3)),'single');
        obj.mat(1,25) = typecast(buffer(i1+96+(0:3)),'single');
        obj.mat(1,26) = typecast(buffer(i1+100+(0:3)),'single');
        obj.mat(1,27) = typecast(buffer(i1+104+(0:3)),'single');
        obj.mat(1,28) = typecast(buffer(i1+108+(0:3)),'single');
        obj.mat(1,29) = typecast(buffer(i1+112+(0:3)),'single');
        obj.mat(1,30) = typecast(buffer(i1+116+(0:3)),'single');
        obj.mat(1,31) = typecast(buffer(i1+120+(0:3)),'single');
        obj.mat(1,32) = typecast(buffer(i1+124+(0:3)),'single');
        obj.mat(1,33) = typecast(buffer(i1+128+(0:3)),'single');
        obj.mat(1,34) = typecast(buffer(i1+132+(0:3)),'single');
        obj.mat(1,35) = typecast(buffer(i1+136+(0:3)),'single');
        obj.mat(1,36) = typecast(buffer(i1+140+(0:3)),'single');
        obj.mat(1,37) = typecast(buffer(i1+144+(0:3)),'single');
        obj.mat(1,38) = typecast(buffer(i1+148+(0:3)),'single');
        obj.mat(1,39) = typecast(buffer(i1+152+(0:3)),'single');
        obj.mat(1,40) = typecast(buffer(i1+156+(0:3)),'single');
        obj.mat(1,41) = typecast(buffer(i1+160+(0:3)),'single');
        obj.mat(1,42) = typecast(buffer(i1+164+(0:3)),'single');
        obj.mat(1,43) = typecast(buffer(i1+168+(0:3)),'single');
        obj.mat(1,44) = typecast(buffer(i1+172+(0:3)),'single');
        obj.mat(1,45) = typecast(buffer(i1+176+(0:3)),'single');
        obj.mat(1,46) = typecast(buffer(i1+180+(0:3)),'single');
        obj.mat(1,47) = typecast(buffer(i1+184+(0:3)),'single');
        obj.mat(1,48) = typecast(buffer(i1+188+(0:3)),'single');
        obj.mat(1,49) = typecast(buffer(i1+192+(0:3)),'single');
        obj.mat(1,50) = typecast(buffer(i1+196+(0:3)),'single');
        obj.mat(2,1) = typecast(buffer(i1+200+(0:3)),'single');
        obj.mat(2,2) = typecast(buffer(i1+204+(0:3)),'single');
        obj.mat(2,3) = typecast(buffer(i1+208+(0:3)),'single');
        obj.mat(2,4) = typecast(buffer(i1+212+(0:3)),'single');
        obj.mat(2,5) = typecast(buffer(i1+216+(0:3)),'single');
        obj.mat(2,6) = typecast(buffer(i1+220+(0:3)),'single');
        obj.mat(2,7) = typecast(buffer(i1+224+(0:3)),'single');
        obj.mat(2,8) = typecast(buffer(i1+228+(0:3)),'single');
        obj.mat(2,9) = typecast(buffer(i1+232+(0:3)),'single');
        obj.mat(2,10) = typecast(buffer(i1+236+(0:3)),'single');
        obj.mat(2,11) = typecast(buffer(i1+240+(0:3)),'single');
        obj.mat(2,12) = typecast(buffer(i1+244+(0:3)),'single');
        obj.mat(2,13) = typecast(buffer(i1+248+(0:3)),'single');
        obj.mat(2,14) = typecast(buffer(i1+252+(0:3)),'single');
        obj.mat(2,15) = typecast(buffer(i1+256+(0:3)),'single');
        obj.mat(2,16) = typecast(buffer(i1+260+(0:3)),'single');
        obj.mat(2,17) = typecast(buffer(i1+264+(0:3)),'single');
        obj.mat(2,18) = typecast(buffer(i1+268+(0:3)),'single');
        obj.mat(2,19) = typecast(buffer(i1+272+(0:3)),'single');
        obj.mat(2,20) = typecast(buffer(i1+276+(0:3)),'single');
        obj.mat(2,21) = typecast(buffer(i1+280+(0:3)),'single');
        obj.mat(2,22) = typecast(buffer(i1+284+(0:3)),'single');
        obj.mat(2,23) = typecast(buffer(i1+288+(0:3)),'single');
        obj.mat(2,24) = typecast(buffer(i1+292+(0:3)),'single');
        obj.mat(2,25) = typecast(buffer(i1+296+(0:3)),'single');
        obj.mat(2,26) = typecast(buffer(i1+300+(0:3)),'single');
        obj.mat(2,27) = typecast(buffer(i1+304+(0:3)),'single');
        obj.mat(2,28) = typecast(buffer(i1+308+(0:3)),'single');
        obj.mat(2,29) = typecast(buffer(i1+312+(0:3)),'single');
        obj.mat(2,30) = typecast(buffer(i1+316+(0:3)),'single');
        obj.mat(2,31) = typecast(buffer(i1+320+(0:3)),'single');
        obj.mat(2,32) = typecast(buffer(i1+324+(0:3)),'single');
        obj.mat(2,33) = typecast(buffer(i1+328+(0:3)),'single');
        obj.mat(2,34) = typecast(buffer(i1+332+(0:3)),'single');
        obj.mat(2,35) = typecast(buffer(i1+336+(0:3)),'single');
        obj.mat(2,36) = typecast(buffer(i1+340+(0:3)),'single');
        obj.mat(2,37) = typecast(buffer(i1+344+(0:3)),'single');
        obj.mat(2,38) = typecast(buffer(i1+348+(0:3)),'single');
        obj.mat(2,39) = typecast(buffer(i1+352+(0:3)),'single');
        obj.mat(2,40) = typecast(buffer(i1+356+(0:3)),'single');
        obj.mat(2,41) = typecast(buffer(i1+360+(0:3)),'single');
        obj.mat(2,42) = typecast(buffer(i1+364+(0:3)),'single');
        obj.mat(2,43) = typecast(buffer(i1+368+(0:3)),'single');
        obj.mat(2,44) = typecast(buffer(i1+372+(0:3)),'single');
        obj.mat(2,45) = typecast(buffer(i1+376+(0:3)),'single');
        obj.mat(2,46) = typecast(buffer(i1+380+(0:3)),'single');
        obj.mat(2,47) = typecast(buffer(i1+384+(0:3)),'single');
        obj.mat(2,48) = typecast(buffer(i1+388+(0:3)),'single');
        obj.mat(2,49) = typecast(buffer(i1+392+(0:3)),'single');
        obj.mat(2,50) = typecast(buffer(i1+396+(0:3)),'single');
        obj.mat(3,1) = typecast(buffer(i1+400+(0:3)),'single');
        obj.mat(3,2) = typecast(buffer(i1+404+(0:3)),'single');
        obj.mat(3,3) = typecast(buffer(i1+408+(0:3)),'single');
        obj.mat(3,4) = typecast(buffer(i1+412+(0:3)),'single');
        obj.mat(3,5) = typecast(buffer(i1+416+(0:3)),'single');
        obj.mat(3,6) = typecast(buffer(i1+420+(0:3)),'single');
        obj.mat(3,7) = typecast(buffer(i1+424+(0:3)),'single');
        obj.mat(3,8) = typecast(buffer(i1+428+(0:3)),'single');
        obj.mat(3,9) = typecast(buffer(i1+432+(0:3)),'single');
        obj.mat(3,10) = typecast(buffer(i1+436+(0:3)),'single');
        obj.mat(3,11) = typecast(buffer(i1+440+(0:3)),'single');
        obj.mat(3,12) = typecast(buffer(i1+444+(0:3)),'single');
        obj.mat(3,13) = typecast(buffer(i1+448+(0:3)),'single');
        obj.mat(3,14) = typecast(buffer(i1+452+(0:3)),'single');
        obj.mat(3,15) = typecast(buffer(i1+456+(0:3)),'single');
        obj.mat(3,16) = typecast(buffer(i1+460+(0:3)),'single');
        obj.mat(3,17) = typecast(buffer(i1+464+(0:3)),'single');
        obj.mat(3,18) = typecast(buffer(i1+468+(0:3)),'single');
        obj.mat(3,19) = typecast(buffer(i1+472+(0:3)),'single');
        obj.mat(3,20) = typecast(buffer(i1+476+(0:3)),'single');
        obj.mat(3,21) = typecast(buffer(i1+480+(0:3)),'single');
        obj.mat(3,22) = typecast(buffer(i1+484+(0:3)),'single');
        obj.mat(3,23) = typecast(buffer(i1+488+(0:3)),'single');
        obj.mat(3,24) = typecast(buffer(i1+492+(0:3)),'single');
        obj.mat(3,25) = typecast(buffer(i1+496+(0:3)),'single');
        obj.mat(3,26) = typecast(buffer(i1+500+(0:3)),'single');
        obj.mat(3,27) = typecast(buffer(i1+504+(0:3)),'single');
        obj.mat(3,28) = typecast(buffer(i1+508+(0:3)),'single');
        obj.mat(3,29) = typecast(buffer(i1+512+(0:3)),'single');
        obj.mat(3,30) = typecast(buffer(i1+516+(0:3)),'single');
        obj.mat(3,31) = typecast(buffer(i1+520+(0:3)),'single');
        obj.mat(3,32) = typecast(buffer(i1+524+(0:3)),'single');
        obj.mat(3,33) = typecast(buffer(i1+528+(0:3)),'single');
        obj.mat(3,34) = typecast(buffer(i1+532+(0:3)),'single');
        obj.mat(3,35) = typecast(buffer(i1+536+(0:3)),'single');
        obj.mat(3,36) = typecast(buffer(i1+540+(0:3)),'single');
        obj.mat(3,37) = typecast(buffer(i1+544+(0:3)),'single');
        obj.mat(3,38) = typecast(buffer(i1+548+(0:3)),'single');
        obj.mat(3,39) = typecast(buffer(i1+552+(0:3)),'single');
        obj.mat(3,40) = typecast(buffer(i1+556+(0:3)),'single');
        obj.mat(3,41) = typecast(buffer(i1+560+(0:3)),'single');
        obj.mat(3,42) = typecast(buffer(i1+564+(0:3)),'single');
        obj.mat(3,43) = typecast(buffer(i1+568+(0:3)),'single');
        obj.mat(3,44) = typecast(buffer(i1+572+(0:3)),'single');
        obj.mat(3,45) = typecast(buffer(i1+576+(0:3)),'single');
        obj.mat(3,46) = typecast(buffer(i1+580+(0:3)),'single');
        obj.mat(3,47) = typecast(buffer(i1+584+(0:3)),'single');
        obj.mat(3,48) = typecast(buffer(i1+588+(0:3)),'single');
        obj.mat(3,49) = typecast(buffer(i1+592+(0:3)),'single');
        obj.mat(3,50) = typecast(buffer(i1+596+(0:3)),'single');
        i2 = i1+600;
      else
        error('Buffer must be a uint8 array.')
      end
    end
  end
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
